{"ast":null,"code":"import _objectSpread from \"/home/ubuntu/projects/mynetwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/ubuntu/projects/mynetwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ubuntu/projects/mynetwork/src/features/otryad/views/examples/logs/LogForm.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { Field, Form } from 'react-final-form';\nimport { Button, Col, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport moment from 'moment';\nimport { addDays } from 'date-fns';\nimport DatePicker from \"react-datepicker\";\nimport MapInput from '../../../extrafunc/MapInput';\nimport { createLog, getLogByGq } from '../../../query/logs';\nimport { useMutation, useQuery } from 'react-query';\n\nfunction LogForm(_ref) {\n  var _this = this;\n\n  var editingLogId = _ref.editingLogId,\n      user = _ref.user,\n      log = _ref.log,\n      logdata = _ref.logdata,\n      newLogToggle = _ref.newLogToggle;\n\n  // const [log, setlog] = useState({})\n  // const logdata = useQuery([\"log\", { date: moment().format(\"YYYY-MM-DD\"), id: user.command.id }], getLogByGq)\n  var _useMutation = useMutation(createLog, {\n    onSuccess: function onSuccess() {\n      logdata.refetch();\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      logMut = _useMutation2[0],\n      logMutRes = _useMutation2[1]; // useEffect(() => {\n  //     if (logdata.data && logdata.data.logs != null) {\n  //         setlog(logdata.data.logs[0])\n  //     } else {\n  //         setlog({})\n  //     }\n  // }, [logdata.data]);\n\n\n  var onSubmit = function onSubmit(data) {\n    var temp = _objectSpread({}, data);\n\n    temp.date = moment().format(\"YYYY-MM-DD\");\n    temp.command = user.command.id;\n    logMut(temp); // console.log(temp);\n    // console.log(repMutRes);\n\n    newLogToggle();\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    initialValues: _objectSpread({}, log, {\n      start: new Date(),\n      end: new Date(),\n      position: log && log.position || {\n        name: null,\n        pos: {\n          lat: null,\n          lng: null\n        }\n      }\n    }),\n    render: function render(_ref2) {\n      var handleSubmit = _ref2.handleSubmit,\n          submitError = _ref2.submitError,\n          values = _ref2.values,\n          form = _ref2.form;\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, submitError && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-red text-center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 37\n        }\n      }, submitError), /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"mb-3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-alternative\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        name: \"head\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }\n      }, function (props) {\n        return /*#__PURE__*/React.createElement(Input, {\n          placeholder: \"\\u0421\\u0442\\u0430\\u0440\\u0448\\u0438\\u0439 \\u0433\\u0440\\u0443\\u043F\\u043F\\u044B\",\n          type: \"text\",\n          name: props.input.name,\n          value: props.input.value,\n          onChange: props.input.onChange,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 45\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"mb-3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-alternative\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        name: \"count_ls\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }\n      }, function (props) {\n        return /*#__PURE__*/React.createElement(Input, {\n          placeholder: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043B/\\u0441\",\n          type: \"number\",\n          name: props.input.name,\n          value: props.input.value,\n          onChange: props.input.onChange,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 45\n          }\n        });\n      })))), /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"mb-3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-alternative\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        name: \"start\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }\n      }, function (props) {\n        return /*#__PURE__*/React.createElement(DatePicker, {\n          name: props.input.name,\n          value: props.input.value,\n          onChange: props.input.onChange,\n          selected: props.input.value,\n          dateFormat: \"dd-MM-yyyy\",\n          minDate: addDays(new Date(moment().format('MMM DD, YYYYY')), 0),\n          customInput: /*#__PURE__*/React.createElement(Input, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 62\n            }\n          }),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 45\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"mb-3 top-z-199\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-alternative\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        name: \"end\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 37\n        }\n      }, function (props) {\n        return /*#__PURE__*/React.createElement(DatePicker, {\n          name: props.input.name,\n          value: props.input.value,\n          onChange: props.input.onChange,\n          selected: props.input.value,\n          dateFormat: \"dd-MM-yyyy\",\n          minDate: addDays(new Date(moment().format('MMM DD, YYYYY')), 0),\n          customInput: /*#__PURE__*/React.createElement(Input, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 62\n            }\n          }),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 45\n          }\n        });\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        name: \"position\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      }, function (props) {\n        return /*#__PURE__*/React.createElement(MapInput, {\n          name: props.input.name,\n          value: props.input.value,\n          onChange: props.input.onChange,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 37\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"float-right\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"default\",\n        onClick: function onClick() {\n          form.reset();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 33\n        }\n      }, \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        disabled: editingLogId == null ? null : \"disabled\",\n        onClick: function onClick() {\n          handleSubmit(values);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 33\n        }\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  });\n}\n\n__signature__(LogForm, \"useMutation{[logMut, logMutRes]}\", function () {\n  return [useMutation];\n});\n\nvar _default = LogForm;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(LogForm, \"LogForm\", \"/home/ubuntu/projects/mynetwork/src/features/otryad/views/examples/logs/LogForm.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/ubuntu/projects/mynetwork/src/features/otryad/views/examples/logs/LogForm.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/ubuntu/projects/mynetwork/src/features/otryad/views/examples/logs/LogForm.js"],"names":["React","useEffect","useState","Field","Form","Button","Col","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","Row","moment","addDays","DatePicker","MapInput","createLog","getLogByGq","useMutation","useQuery","LogForm","editingLogId","user","log","logdata","newLogToggle","onSuccess","refetch","logMut","logMutRes","onSubmit","data","temp","date","format","command","id","start","Date","end","position","name","pos","lat","lng","handleSubmit","submitError","values","form","props","input","value","onChange","reset"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Field, Form } from 'react-final-form'\r\nimport { Button, Col, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap'\r\nimport moment from 'moment'\r\nimport { addDays } from 'date-fns';\r\nimport DatePicker from \"react-datepicker\";\r\nimport MapInput from '../../../extrafunc/MapInput';\r\nimport { createLog, getLogByGq } from '../../../query/logs';\r\nimport { useMutation, useQuery } from 'react-query';\r\n\r\nfunction LogForm({ editingLogId, user, log, logdata, newLogToggle }) {\r\n\r\n    // const [log, setlog] = useState({})\r\n\r\n    // const logdata = useQuery([\"log\", { date: moment().format(\"YYYY-MM-DD\"), id: user.command.id }], getLogByGq)\r\n\r\n    const [logMut, logMutRes] = useMutation(createLog, {\r\n        onSuccess: () => {\r\n            logdata.refetch()\r\n        }\r\n    })\r\n\r\n    // useEffect(() => {\r\n    //     if (logdata.data && logdata.data.logs != null) {\r\n    //         setlog(logdata.data.logs[0])\r\n    //     } else {\r\n    //         setlog({})\r\n    //     }\r\n    // }, [logdata.data]);\r\n\r\n    const onSubmit = (data) => {\r\n        let temp = { ...data }\r\n        temp.date = moment().format(\"YYYY-MM-DD\")\r\n        temp.command = user.command.id\r\n\r\n        logMut(temp)\r\n        // console.log(temp);\r\n        // console.log(repMutRes);\r\n        newLogToggle()\r\n    }\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            initialValues={{\r\n                ...log,\r\n                start: new Date(),\r\n                end: new Date(),\r\n                position: log && log.position || { name: null, pos: { lat: null, lng: null } }\r\n            }}\r\n            render={({ handleSubmit, submitError, values, form }) => (\r\n                <form onSubmit={handleSubmit} className=\"form\">\r\n                    {submitError && <div className=\"text-red text-center\">{submitError}</div>}\r\n                    <Row>\r\n                        <Col>\r\n                            <FormGroup className=\"mb-3\">\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <Field name=\"head\">\r\n                                        {props => (\r\n                                            <Input placeholder=\"Старший группы\" type=\"text\"\r\n                                                name={props.input.name}\r\n                                                value={props.input.value}\r\n                                                onChange={props.input.onChange}\r\n                                            />\r\n                                        )}\r\n                                    </Field>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup className=\"mb-3\">\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <Field name=\"count_ls\">\r\n                                        {props => (\r\n                                            <Input placeholder=\"Количество л/с\" type=\"number\"\r\n                                                name={props.input.name}\r\n                                                value={props.input.value}\r\n                                                onChange={props.input.onChange}\r\n                                            />\r\n                                        )}\r\n                                    </Field>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup className=\"mb-3\">\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <Field name=\"start\">\r\n                                        {props => (\r\n                                            <DatePicker\r\n                                                name={props.input.name}\r\n                                                value={props.input.value}\r\n                                                onChange={props.input.onChange}\r\n                                                selected={props.input.value}\r\n                                                dateFormat=\"dd-MM-yyyy\"\r\n                                                minDate={addDays(new Date(moment().format('MMM DD, YYYYY')), 0)}\r\n                                                customInput={<Input />}\r\n                                            />\r\n                                        )}\r\n                                    </Field>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup className=\"mb-3 top-z-199\">\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <Field name=\"end\">\r\n                                        {props => (\r\n                                            <DatePicker\r\n                                                name={props.input.name}\r\n                                                value={props.input.value}\r\n                                                onChange={props.input.onChange}\r\n                                                selected={props.input.value}\r\n                                                dateFormat=\"dd-MM-yyyy\"\r\n                                                minDate={addDays(new Date(moment().format('MMM DD, YYYYY')), 0)}\r\n                                                customInput={<Input />}\r\n                                            />\r\n                                        )}\r\n                                    </Field>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Field name=\"position\">\r\n                                {props => (\r\n                                    <MapInput\r\n                                        name={props.input.name}\r\n                                        value={props.input.value}\r\n                                        onChange={props.input.onChange} />\r\n                                )}\r\n                            </Field>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* <FormGroup>\r\n                                    <InputGroup>\r\n                                        <Field name=\"repcat\">\r\n                                            {props => (\r\n                                                <Input type=\"select\"\r\n                                                    name={props.input.name}\r\n                                                    value={props.input.value}\r\n                                                    onChange={props.input.onChange}\r\n                                                >\r\n                                                    <option>Выберите категорию</option>\r\n                                                    {repcat.map((item) => {\r\n                                                        return (\r\n                                                            <option value={item.id}>{item.name}</option>\r\n                                                        )\r\n                                                    })}\r\n                                                </Input>\r\n                                            )}\r\n                                        </Field>\r\n                                    </InputGroup>\r\n                    </FormGroup> */}\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"float-right\">\r\n                                <Button color=\"default\" onClick={() => { form.reset() }}>Сбросить</Button>\r\n                                <Button color=\"primary\" disabled={editingLogId == null ? null : \"disabled\"} onClick={() => { handleSubmit(values) }}>Сохранить</Button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n\r\n                </form>)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default LogForm\r\n"]},"metadata":{},"sourceType":"module"}
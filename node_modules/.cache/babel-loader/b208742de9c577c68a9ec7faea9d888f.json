{"ast":null,"code":"import _regeneratorRuntime from \"/home/ubuntu/projects/dashboard-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ubuntu/projects/dashboard-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { strapi } from \"../../axios\";\nexport var getRepcats = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return strapi.getEntries('repcats');\n\n          case 2:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getRepcats() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var createReport = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formData) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return strapi.createEntry('reports', formData);\n\n          case 2:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function createReport(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var updateReport = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(formData) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return strapi.updateEntry('reports', formData.id, formData);\n\n          case 2:\n            data = _context3.sent;\n            return _context3.abrupt(\"return\", data);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function updateReport(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getReportsByGq = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(key, _ref4) {\n    var date, data;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            date = _ref4.date;\n            _context4.next = 3;\n            return strapi.request(\"POST\", \"/graphql\", {\n              data: {\n                query: \"\\n            query {\\n                reports(where: { date: \\\"\".concat(date, \"\\\" }, sort:\\\"id:asc\\\") {\\n                  id\\n                  dej\\n                  dej_pom\\n                  royxat_boyicha\\n                  safda\\n                  safar\\n                  tatil\\n                  gospital\\n                  uy_karantin\\n                  command {\\n                    name\\n                  }\\n                  repcat {\\n                    id\\n                    name\\n                  }\\n                  file {\\n                    url\\n                  }\\n                }\\n              }\\n              \\n            \")\n              }\n            });\n\n          case 3:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", data.data);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getReportsByGq(_x3, _x4) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var getReportByGq = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(key, _ref6) {\n    var date, id, data;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            date = _ref6.date, id = _ref6.id;\n            _context5.next = 3;\n            return strapi.request(\"POST\", \"/graphql\", {\n              data: {\n                query: \"\\n            query {\\n                reports(where: { date: \\\"\".concat(date, \"\\\", command:{ id: \").concat(id, \" } }, sort:\\\"id:desc\\\") {\\n                  id\\n                  dej\\n                  dej_pom\\n                  royxat_boyicha\\n                  safda\\n                  safar\\n                  tatil\\n                  gospital\\n                  uy_karantin\\n                  command {\\n                    name\\n                  }\\n                  repcat {\\n                    id\\n                    name\\n                  }\\n                  file {\\n                    url\\n                  }\\n                }\\n              }         \\n            \")\n              }\n            });\n\n          case 3:\n            data = _context5.sent;\n            return _context5.abrupt(\"return\", data.data);\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getReportByGq(_x5, _x6) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(getRepcats, \"getRepcats\", \"/home/ubuntu/projects/dashboard-template/src/features/report/query.js\");\n  reactHotLoader.register(createReport, \"createReport\", \"/home/ubuntu/projects/dashboard-template/src/features/report/query.js\");\n  reactHotLoader.register(updateReport, \"updateReport\", \"/home/ubuntu/projects/dashboard-template/src/features/report/query.js\");\n  reactHotLoader.register(getReportsByGq, \"getReportsByGq\", \"/home/ubuntu/projects/dashboard-template/src/features/report/query.js\");\n  reactHotLoader.register(getReportByGq, \"getReportByGq\", \"/home/ubuntu/projects/dashboard-template/src/features/report/query.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/ubuntu/projects/dashboard-template/src/features/report/query.js"],"names":["strapi","getRepcats","getEntries","data","createReport","formData","createEntry","updateReport","updateEntry","id","getReportsByGq","key","date","request","query","getReportByGq"],"mappings":";;;;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,aAAvB;AAEA,OAAO,IAAMC,UAAU;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHD,MAAM,CAACE,UAAP,CAAkB,SAAlB,CADG;;AAAA;AAChBC,YAAAA,IADgB;AAAA,6CAGfA,IAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVF,UAAU;AAAA;AAAA;AAAA,GAAhB;AAMP,OAAO,IAAMG,YAAY;AAAA,uEAAG,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLL,MAAM,CAACM,WAAP,CAAmB,SAAnB,EAA8BD,QAA9B,CADK;;AAAA;AAClBF,YAAAA,IADkB;AAAA,8CAEjBA,IAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZC,YAAY;AAAA;AAAA;AAAA,GAAlB;AAKP,OAAO,IAAMG,YAAY;AAAA,uEAAG,kBAAOF,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLL,MAAM,CAACQ,WAAP,CAAmB,SAAnB,EAA8BH,QAAQ,CAACI,EAAvC,EAA2CJ,QAA3C,CADK;;AAAA;AAClBF,YAAAA,IADkB;AAAA,8CAEjBA,IAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZI,YAAY;AAAA;AAAA;AAAA,GAAlB;AAKP,OAAO,IAAMG,cAAc;AAAA,uEAAG,kBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAcC,YAAAA,IAAd,SAAcA,IAAd;AAAA;AAAA,mBACPZ,MAAM,CAACa,OAAP,CAAe,MAAf,EAAuB,UAAvB,EAAmC;AAClDV,cAAAA,IAAI,EAAE;AACFW,gBAAAA,KAAK,4EAEyBF,IAFzB;AADH;AAD4C,aAAnC,CADO;;AAAA;AACpBT,YAAAA,IADoB;AAAA,8CAkCnBA,IAAI,CAACA,IAlCc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdO,cAAc;AAAA;AAAA;AAAA,GAApB;AAqCP,OAAO,IAAMK,aAAa;AAAA,uEAAG,kBAAOJ,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAcC,YAAAA,IAAd,SAAcA,IAAd,EAAoBH,EAApB,SAAoBA,EAApB;AAAA;AAAA,mBACNT,MAAM,CAACa,OAAP,CAAe,MAAf,EAAuB,UAAvB,EAAmC;AAClDV,cAAAA,IAAI,EAAE;AACFW,gBAAAA,KAAK,4EAEyBF,IAFzB,+BAEiDH,EAFjD;AADH;AAD4C,aAAnC,CADM;;AAAA;AACnBN,YAAAA,IADmB;AAAA,8CAiClBA,IAAI,CAACA,IAjCa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbY,aAAa;AAAA;AAAA;AAAA,GAAnB;;;;;;;;;;0BArDMd,U;0BAMAG,Y;0BAKAG,Y;0BAKAG,c;0BAqCAK,a","sourcesContent":["import { strapi } from \"../../axios\";\r\n\r\nexport const getRepcats = async () => {\r\n    const data = await strapi.getEntries('repcats');\r\n    // console.log(data);\r\n    return data;\r\n}\r\n\r\nexport const createReport = async (formData) => {\r\n    const data = await strapi.createEntry('reports', formData)\r\n    return data;\r\n}\r\n\r\nexport const updateReport = async (formData) => {\r\n    const data = await strapi.updateEntry('reports', formData.id, formData)\r\n    return data;\r\n}\r\n\r\nexport const getReportsByGq = async (key, { date }) => {\r\n    const data = await strapi.request(\"POST\", \"/graphql\", {\r\n        data: {\r\n            query: `\r\n            query {\r\n                reports(where: { date: \"${date}\" }, sort:\"id:asc\") {\r\n                  id\r\n                  dej\r\n                  dej_pom\r\n                  royxat_boyicha\r\n                  safda\r\n                  safar\r\n                  tatil\r\n                  gospital\r\n                  uy_karantin\r\n                  command {\r\n                    name\r\n                  }\r\n                  repcat {\r\n                    id\r\n                    name\r\n                  }\r\n                  file {\r\n                    url\r\n                  }\r\n                }\r\n              }\r\n              \r\n            `}\r\n    })\r\n\r\n    // const data = await strapi.getEntries('reports');\r\n\r\n    // console.log(\"data\", data.data.reports)\r\n    return data.data;\r\n}\r\n\r\nexport const getReportByGq = async (key, { date, id }) => {\r\n    const data = await strapi.request(\"POST\", \"/graphql\", {\r\n        data: {\r\n            query: `\r\n            query {\r\n                reports(where: { date: \"${date}\", command:{ id: ${id} } }, sort:\"id:desc\") {\r\n                  id\r\n                  dej\r\n                  dej_pom\r\n                  royxat_boyicha\r\n                  safda\r\n                  safar\r\n                  tatil\r\n                  gospital\r\n                  uy_karantin\r\n                  command {\r\n                    name\r\n                  }\r\n                  repcat {\r\n                    id\r\n                    name\r\n                  }\r\n                  file {\r\n                    url\r\n                  }\r\n                }\r\n              }         \r\n            `}\r\n    })\r\n\r\n    // const data = await strapi.getEntries('reports');\r\n\r\n    // console.log(\"data\", data.data.reports)\r\n    return data.data;\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/projects/dashboard-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ubuntu/projects/dashboard-template/src/features/map/MapBrowser.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { Component, useRef, useState } from 'react';\nimport { Map, TileLayer, Marker, Popup, Polygon } from 'react-leaflet';\nimport { apiUrl, mapPort, mapUrl } from '../../axios';\nimport { iconPerson } from './Icon';\nimport uz_coor from './uz_coor';\nimport { Button } from 'reactstrap';\nexport default function MapBrowser(_ref) {\n  var _this = this;\n\n  var _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      _ref$center = _ref.center,\n      center = _ref$center === void 0 ? {\n    lat: 41.3108238809182,\n    lng: 67.28064346313478\n  } : _ref$center,\n      _ref$zoom = _ref.zoom,\n      zoom = _ref$zoom === void 0 ? 6 : _ref$zoom,\n      setposition = _ref.setposition;\n  var mapRef = useRef();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      uzborder = _useState2[0],\n      setuzborder = _useState2[1];\n\n  var toggleBorder = function toggleBorder() {\n    setuzborder(!uzborder);\n  };\n\n  var latlngs = uz_coor;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"border-toggle\",\n    onClick: function onClick() {\n      return toggleBorder();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"\\u0413\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\"), /*#__PURE__*/React.createElement(Map, {\n    ref: mapRef,\n    center: center,\n    zoom: zoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\" // url=\"http://127.0.0.1:12345/data/v3/{z}/{x}/{y}.pbf\"\n    ,\n    url: \"\".concat(mapUrl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), uzborder && /*#__PURE__*/React.createElement(Polygon, {\n    positions: latlngs,\n    color: 'lime',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }\n  }), data.map(function (item, key) {\n    return /*#__PURE__*/React.createElement(Marker, {\n      position: item.position.pos,\n      icon: iconPerson,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"\\u041F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435: \", item.command.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 49\n      }\n    }), \"\\u0421\\u0442\\u0430\\u0440\\u0448\\u0438\\u0439: \", item.head, /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 35\n      }\n    }), \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043B/\\u0441: \", item.count_ls, /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 46\n      }\n    })));\n  })));\n}\n\n__signature__(MapBrowser, \"useRef{mapRef}\\nuseState{[uzborder, setuzborder](true)}\");\n\n;\nMapBrowser.propTypes = {};\nMapBrowser.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MapBrowser, \"MapBrowser\", \"/home/ubuntu/projects/dashboard-template/src/features/map/MapBrowser.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/ubuntu/projects/dashboard-template/src/features/map/MapBrowser.js"],"names":["React","Component","useRef","useState","Map","TileLayer","Marker","Popup","Polygon","apiUrl","mapPort","mapUrl","iconPerson","uz_coor","Button","MapBrowser","data","center","lat","lng","zoom","setposition","mapRef","uzborder","setuzborder","toggleBorder","latlngs","map","item","key","position","pos","command","name","head","count_ls","propTypes","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAwCC,OAAxC,QAAuD,eAAvD;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,QAAwC,aAAxC;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,MAAR,QAAqB,YAArB;AAEA,eAAe,SAASC,UAAT,OAGa;AAAA;;AAAA,uBAHSC,IAGT;AAAA,MAHSA,IAGT,0BAHgB,EAGhB;AAAA,yBAHoBC,MAGpB;AAAA,MAHoBA,MAGpB,4BAH6B;AACvDC,IAAAA,GAAG,EAAE,gBADkD;AAEvDC,IAAAA,GAAG,EAAE;AAFkD,GAG7B;AAAA,uBAAzBC,IAAyB;AAAA,MAAzBA,IAAyB,0BAAlB,CAAkB;AAAA,MAAfC,WAAe,QAAfA,WAAe;AAC1B,MAAMC,MAAM,GAAGpB,MAAM,EAArB;;AAD0B,kBAGMC,QAAQ,CAAC,IAAD,CAHd;AAAA;AAAA,MAGnBoB,QAHmB;AAAA,MAGTC,WAHS;;AAI1B,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAK;AACxBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIA,MAAIG,OAAO,GAAGb,OAAd;AACA,sBACE;AAAK,IAAA,SAAS,EAAE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,eAAnB;AAAoC,IAAA,OAAO,EAAE;AAAA,aAAIY,YAAY,EAAhB;AAAA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADA,eAEA,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEH,MAAV;AAAkB,IAAA,MAAM,EAAEL,MAA1B;AAAkC,IAAA,IAAI,EAAEG,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,2EADd,CAEE;AAFF;AAGE,IAAA,GAAG,YAAKT,MAAL,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGY,QAAQ,iBAAI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEG,OAApB;AAA6B,IAAA,KAAK,EAAE,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANf,EAOGV,IAAI,CAACW,GAAL,CAAS,UAACC,IAAD,EAAOC,GAAP,EAAe;AACvB,wBACE,oBAAE,MAAF;AAAS,MAAA,QAAQ,EAAED,IAAI,CAACE,QAAL,CAAcC,GAAjC;AACE,MAAA,IAAI,EAAEnB,UADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FACkBgB,IAAI,CAACI,OAAL,CAAaC,IAD/B,eACoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADpC,kDAEYL,IAAI,CAACM,IAFjB,eAEsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFtB,kFAGmBN,IAAI,CAACO,QAHxB,eAGiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHjC,CAFF,CADF;AAUD,GAXA,CAPH,CAFA,CADF;AAyBD;;cArCuBpB,U;;AAqCvB;AAEDA,UAAU,CAACqB,SAAX,GAAuB,EAAvB;AACArB,UAAU,CAACsB,YAAX,GAA0B,EAA1B;;;;;;;;;;0BAxCwBtB,U","sourcesContent":["import React, { Component, useRef, useState } from 'react'\nimport { Map, TileLayer, Marker, Popup, Polygon } from 'react-leaflet'\nimport { apiUrl, mapPort, mapUrl } from '../../axios'\nimport { iconPerson } from './Icon'\nimport uz_coor from './uz_coor'\nimport {Button} from 'reactstrap'\n\nexport default function MapBrowser({ data = [], center = {\n  lat: 41.3108238809182,\n  lng: 67.28064346313478\n}, zoom = 6, setposition }) {\n  const mapRef = useRef()\n\n  const [uzborder, setuzborder] = useState(true)\n  const toggleBorder = () =>{\n    setuzborder(!uzborder)\n  }\n\n  let latlngs = uz_coor\n  return (\n    <div className={\"map-container\"}>\n    <Button className={\"border-toggle\"} onClick={()=>toggleBorder()}>Граница</Button>\n    <Map ref={mapRef} center={center} zoom={zoom}>\n      <TileLayer\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        // url=\"http://127.0.0.1:12345/data/v3/{z}/{x}/{y}.pbf\"\n        url={`${mapUrl}`}\n      />\n      {uzborder && <Polygon positions={latlngs} color={'lime'} />}\n      {data.map((item, key) => {\n        return (\n          < Marker position={item.position.pos}\n            icon={iconPerson}>\n            <Popup>\n              Подразделение: {item.command.name}<br />\n              Старший: {item.head}<br />\n              Количество л/с: {item.count_ls}<br />\n            </Popup>\n          </ Marker>\n        )\n      })}\n    </Map >\n    </div>\n  )\n};\n\nMapBrowser.propTypes = {};\nMapBrowser.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}
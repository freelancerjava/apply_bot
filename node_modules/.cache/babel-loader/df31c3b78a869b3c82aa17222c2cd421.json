{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/projects/mynetwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/ubuntu/projects/mynetwork/src/features/logs/Logs.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from \"react\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { Button, Card, CardHeader, Col, Container, Modal, ModalBody, ModalFooter, ModalHeader, Progress, Row, Table } from \"reactstrap\";\nimport { getLogsByGq } from \"./query\";\nimport { Header } from \"../headers\";\nimport LogRowHead from \"./LogRowHead\";\nimport LogRow from \"./LogRow\";\nimport LogForm from \"./LogForm\";\nimport { TimeNav } from \"../../extrafunc/Timenav\";\nimport RecordsList from \"../records/RecordsList\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardFooter from \"reactstrap/lib/CardFooter\";\n\nvar Logs = function Logs() {\n  var ltu = localStorage.getItem(\"user\");\n\n  var _useState = useState(JSON.parse(ltu) || {}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setuser = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      logs = _useState4[0],\n      setlogs = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      editingLogId = _useState6[0],\n      seteditingLogId = _useState6[1];\n\n  var _useState7 = useState(new Date(moment().format(\"MMM DD, YYYYY\"))),\n      _useState8 = _slicedToArray(_useState7, 2),\n      startDate = _useState8[0],\n      setStartDate = _useState8[1];\n\n  var today = moment().dayOfYear() == moment(startDate).dayOfYear();\n  var logdata = useQuery([\"logs\", {\n    date: moment(startDate).format(\"YYYY-MM-DD\"),\n    id: user.command.id\n  }], getLogsByGq); // console.log(logdata);\n\n  useEffect(function () {\n    if (logdata.data && logdata.data.logs != null) {\n      setlogs(logdata.data.logs);\n    } else {\n      setlogs([]);\n    }\n  }, [logdata.data]);\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      newLogModalOpen = _useState10[0],\n      setnewLogModalOpen = _useState10[1];\n\n  var newLogToggle = function newLogToggle(index) {\n    seteditingLogId(index);\n    setnewLogModalOpen(!newLogModalOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    className: \"mt--7 row-transition\",\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"\\u0421\\u0443\\u0442\\u043E\\u0447\\u043D\\u044B\\u0435 \\u043E\\u0442\\u0447\\u0435\\u0442\\u044B\"), /*#__PURE__*/React.createElement(TimeNav, {\n    today: today,\n    startDate: startDate,\n    setStartDate: setStartDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: function onClick(e) {\n      return e.preventDefault();\n    },\n    size: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"\\u041F\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u0442\\u044C \\u0432\\u0441\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"info\",\n    onClick: function onClick(e) {\n      e.preventDefault();\n      setnewLogModalOpen(true);\n      seteditingLogId(null);\n    },\n    size: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scrolling-div\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"align-items-center table-flush \",\n    responsive: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LogRowHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, logs && logs.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(LogRow, {\n      onClick: function onClick() {\n        newLogToggle(index);\n      },\n      item: item,\n      index: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 27\n      }\n    });\n  })))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: newLogModalOpen,\n    toggle: newLogToggle,\n    className: \"modal-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: newLogToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043C\\u0430\\u043D\\u0435\\u0432\\u0440\\u0435\\u043D\\u043D\\u043E\\u0435 \\u043F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LogForm, {\n    editingLogId: editingLogId,\n    user: user,\n    log: logs[editingLogId],\n    logdata: logdata,\n    newLogToggle: newLogToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\n__signature__(Logs, \"useState{[user, setuser](JSON.parse(ltu) || {})}\\nuseState{[logs, setlogs]([])}\\nuseState{[editingLogId, seteditingLogId](null)}\\nuseState{[startDate, setStartDate](new Date(moment().format(\\\"MMM DD, YYYYY\\\")))}\\nuseQuery{logdata}\\nuseEffect{}\\nuseState{[newLogModalOpen, setnewLogModalOpen](false)}\", function () {\n  return [useQuery];\n});\n\nLogs.propTypes = {};\nLogs.defaultProps = {};\nvar _default = Logs;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Logs, \"Logs\", \"/home/ubuntu/projects/mynetwork/src/features/logs/Logs.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/ubuntu/projects/mynetwork/src/features/logs/Logs.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/ubuntu/projects/mynetwork/src/features/logs/Logs.js"],"names":["React","useEffect","useState","useMutation","useQuery","Link","moment","Button","Card","CardHeader","Col","Container","Modal","ModalBody","ModalFooter","ModalHeader","Progress","Row","Table","getLogsByGq","Header","LogRowHead","LogRow","LogForm","TimeNav","RecordsList","CardBody","CardFooter","Logs","ltu","localStorage","getItem","JSON","parse","user","setuser","logs","setlogs","editingLogId","seteditingLogId","Date","format","startDate","setStartDate","today","dayOfYear","logdata","date","id","command","data","newLogModalOpen","setnewLogModalOpen","newLogToggle","index","e","preventDefault","map","item","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Col,\n  Container,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Progress,\n  Row,\n  Table,\n} from \"reactstrap\";\nimport { getLogsByGq } from \"./query\";\nimport { Header } from \"../headers\";\nimport LogRowHead from \"./LogRowHead\";\nimport LogRow from \"./LogRow\";\nimport LogForm from \"./LogForm\";\nimport { TimeNav } from \"../../extrafunc/Timenav\";\nimport RecordsList from \"../records/RecordsList\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardFooter from \"reactstrap/lib/CardFooter\";\n\nconst Logs = () => {\n  const ltu = localStorage.getItem(\"user\");\n  const [user, setuser] = useState(JSON.parse(ltu) || {});\n  const [logs, setlogs] = useState([]);\n  const [editingLogId, seteditingLogId] = useState(null);\n\n  const [startDate, setStartDate] = useState(\n    new Date(moment().format(\"MMM DD, YYYYY\"))\n  );\n  const today = moment().dayOfYear() == moment(startDate).dayOfYear();\n\n  const logdata = useQuery(\n    [\n      \"logs\",\n      { date: moment(startDate).format(\"YYYY-MM-DD\"), id: user.command.id },\n    ],\n    getLogsByGq\n  );\n  // console.log(logdata);\n\n  useEffect(() => {\n    if (logdata.data && logdata.data.logs != null) {\n      setlogs(logdata.data.logs);\n    } else {\n      setlogs([]);\n    }\n  }, [logdata.data]);\n\n  const [newLogModalOpen, setnewLogModalOpen] = useState(false);\n\n  const newLogToggle = (index) => {\n    seteditingLogId(index);\n    setnewLogModalOpen(!newLogModalOpen);\n  };\n\n  return (\n    <>\n      <Container className=\"mt--7 row-transition\" fluid>\n        <Row>\n          <Col>\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Суточные отчеты</h3>\n                    <TimeNav\n                      today={today}\n                      startDate={startDate}\n                      setStartDate={setStartDate}\n                    />\n                  </div>\n                  <div className=\"col text-right\">\n                    <Button\n                      color=\"primary\"\n                      onClick={(e) => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      Посмотреть все\n                    </Button>\n                    <Button\n                      color=\"info\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setnewLogModalOpen(true);\n                        seteditingLogId(null);\n                      }}\n                      size=\"sm\"\n                    >\n                      Добавить\n                    </Button>\n                  </div>\n                </Row>\n              </CardHeader>\n\n              <div className=\"scrolling-div\">\n                <Table className=\"align-items-center table-flush \" responsive>\n                  <LogRowHead />\n                  <tbody>\n                    {logs &&\n                      logs.map((item, index) => {\n                        return (\n                          <LogRow\n                            onClick={() => {\n                              newLogToggle(index);\n                            }}\n                            item={item}\n                            index={index}\n                          />\n                        );\n                      })}\n                  </tbody>\n                </Table>\n              </div>\n\n              <Modal\n                isOpen={newLogModalOpen}\n                toggle={newLogToggle}\n                className=\"modal-lg\"\n              >\n                <ModalHeader toggle={newLogToggle}>\n                  Добавить маневренное подразделение\n                </ModalHeader>\n                <ModalBody>\n                  <LogForm\n                    editingLogId={editingLogId}\n                    user={user}\n                    log={logs[editingLogId]}\n                    logdata={logdata}\n                    newLogToggle={newLogToggle}\n                  />\n                </ModalBody>\n              </Modal>\n            </Card>\n          </Col>\n        </Row>\n        {/* <Row>\n          <Col>\n            <Card>\n              <CardHeader>\n                <h3>Title</h3>\n              </CardHeader>\n              <RecordsList />\n            </Card>\n          </Col>\n        </Row> */}\n      </Container>\n    </>\n  );\n};\n\nLogs.propTypes = {};\nLogs.defaultProps = {};\n\nexport default Logs;\n"]},"metadata":{},"sourceType":"module"}
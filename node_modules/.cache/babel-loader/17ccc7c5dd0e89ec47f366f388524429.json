{"ast":null,"code":"import _objectSpread from \"/home/ubuntu/projects/mynetwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/ubuntu/projects/mynetwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"/home/ubuntu/projects/mynetwork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/ubuntu/projects/mynetwork/src/features/records/Records.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from \"react\";\nimport { Field, Form } from \"react-final-form\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { Button, Card, CardBody, CardFooter, CardHeader, Col, Container, Form as RForm, FormGroup, Input, InputGroup, Row, Table } from \"reactstrap\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { createRecord, getUtilsByGq } from \"./query\";\nimport moment from \"moment\";\nexport default function Records(_ref) {\n  var _this = this;\n\n  var props = _extends({}, _ref);\n\n  var _useMutation = useMutation(createRecord, {\n    onSuccess: function onSuccess() {}\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      recordMut = _useMutation2[0],\n      recordMutRes = _useMutation2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      srcs = _useState2[0],\n      setsrc = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      devices = _useState4[0],\n      setdevices = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      records = _useState6[0],\n      setrecords = _useState6[1];\n\n  var _useState7 = useState(new Date(moment().format(\"MMM DD, YYYYY\"))),\n      _useState8 = _slicedToArray(_useState7, 2),\n      startDate = _useState8[0],\n      setStartDate = _useState8[1];\n\n  var today = moment().dayOfYear() == moment(startDate).dayOfYear(); // const srcsdata = useQuery(\"srcs\", getSrcByGq)\n  // const devicedata = useQuery(\"devices\", getDeviceByGq)\n\n  var utils = useQuery([\"utils\", {\n    date: moment(new Date()).format(\"YYYY-MM-DD\")\n  }], getUtilsByGq); // console.log(\"query\", { date: moment(new Date()).format(\"YYYY-MM-DD\") });\n\n  var user = JSON.parse(localStorage.getItem(\"user\"));\n  useEffect(function () {\n    var cancel = false;\n\n    if (!cancel) {\n      if (utils.data && utils.data.srcObjects != null) {\n        setsrc(utils.data.srcObjects);\n      } else {\n        setsrc([]);\n      }\n\n      if (utils.data && utils.data.devices != null) {\n        setdevices(utils.data.devices);\n      } else {\n        setdevices([]);\n      }\n\n      if (utils.data && utils.data.records != null) {\n        setrecords(utils.data.records.map(function (item) {\n          return {\n            id: item.id,\n            src_object: item.src_object && item.src_object.id,\n            device: item.device.id,\n            count: item.count,\n            give_data: item.give_data,\n            give_k: item.give_k,\n            give_skk: item.give_skk,\n            command: item.command && item.command.id || user.command.id,\n            date: item.date || moment().format(\"YYYY-MM-DD\")\n          };\n        }));\n      } else {\n        setrecords([]);\n      }\n    } else {\n      cancel = true;\n    }\n  }, [utils.data, user.command.id]);\n\n  var onSubmit = function onSubmit(data) {\n    var temp = _objectSpread({}, data);\n\n    temp.records.map(function (item, key) {\n      item.command = user.command.id;\n      if (item.date == null) item.date = moment().format(\"YYYY-MM-DD\");\n    }); // temp.command = user.command.id\n\n    console.log(\"records\", temp);\n    recordMut({\n      data: temp,\n      records: records\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    onSubmit: onSubmit,\n    mutators: _objectSpread({}, arrayMutators),\n    initialValues: {\n      records: records\n    },\n    render: function render(_ref2) {\n      var handleSubmit = _ref2.handleSubmit,\n          submitError = _ref2.submitError,\n          values = _ref2.values,\n          form = _ref2.form;\n      return /*#__PURE__*/React.createElement(RForm, {\n        onSubmit: handleSubmit,\n        className: \"form\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, submitError && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-red text-center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, submitError), /*#__PURE__*/React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\"), /*#__PURE__*/React.createElement(TimeNav, {\n        today: today,\n        startDate: startDate,\n        setStartDate: setStartDate,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FieldArray, {\n        name: \"records\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, function (_ref3) {\n        var fields = _ref3.fields;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Table, {\n          className: \"align-items-center table-flush\",\n          responsive: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"thead\", {\n          className: \"thead-light\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 27\n          }\n        }, \"\\u0420\\u0430\\u0437\\u0432\\u0435\\u0434\\u044B\\u0432\\u0430\\u0435\\u043C\\u044B\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043A\\u0442\\u044B\"), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 27\n          }\n        }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 40\n          }\n        }), \" \\u043F\\u0435\\u0440\\u0435\\u0445\\u0432\\u0430\\u0447\\u0435\\u043D\\u043D\\u044B\\u0445 \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 61\n          }\n        }), \" \\u0440\\u0430\\u0437\\u0432\\u0435\\u0434\\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 27\n          }\n        }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 40\n          }\n        }), \" \\u043F\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0445 \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 62\n          }\n        }), \" \\u0441\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u0439\"), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 27\n          }\n        }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 40\n          }\n        }), \" \\u043F\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0445 \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 62\n          }\n        }), \" \\u043A\\u0440\\u0438\\u043F\\u0442.\"), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 27\n          }\n        }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 40\n          }\n        }), \" \\u043F\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0445 \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 62\n          }\n        }), \" \\u0441\\u043A\\u043A\"), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 27\n          }\n        }, \"\\u0421\\u0440\\u0435\\u0434\\u0441\\u0442\\u0432\\u0430 \\u043F\\u0435\\u0440\\u0435\\u0445\\u0432\\u0430\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 27\n          }\n        }))), /*#__PURE__*/React.createElement(\"tbody\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 23\n          }\n        }, fields.map(function (name, index) {\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            className: \"row-transition\",\n            key: name,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormGroup, {\n            className: \"mr-2 mt-2 mb-2\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(InputGroup, {\n            className: \"input-group-alternative\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Field, {\n            name: \"\".concat(name, \".src_object\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 35\n            }\n          }, function (props) {\n            return /*#__PURE__*/React.createElement(Input, {\n              type: \"select\",\n              name: props.input.name,\n              value: props.input.value,\n              onChange: props.input.onChange,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 39\n              }\n            }, /*#__PURE__*/React.createElement(\"option\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 41\n              }\n            }), srcs.map(function (item, key) {\n              return /*#__PURE__*/React.createElement(\"option\", {\n                value: item.id,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 45\n                }\n              }, item.name);\n            }));\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormGroup, {\n            className: \"m-2\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(InputGroup, {\n            className: \"input-group-alternative\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Field, {\n            name: \"\".concat(name, \".count\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 35\n            }\n          }, function (props) {\n            return /*#__PURE__*/React.createElement(Input, {\n              placeholder: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u0435\\u0440\\u0435\\u0445\\u0432\\u0430\\u0442\\u0430\",\n              type: \"number\",\n              name: props.input.name,\n              value: props.input.value,\n              onChange: props.input.onChange,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 39\n              }\n            });\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormGroup, {\n            className: \"m-2\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(InputGroup, {\n            className: \"input-group-alternative\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Field, {\n            name: \"\".concat(name, \".give_data\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 35\n            }\n          }, function (props) {\n            return /*#__PURE__*/React.createElement(Input, {\n              placeholder: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0445 \\u0441\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u0439\",\n              type: \"number\",\n              name: props.input.name,\n              value: props.input.value,\n              onChange: props.input.onChange,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 39\n              }\n            });\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormGroup, {\n            className: \"m-2\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(InputGroup, {\n            className: \"input-group-alternative\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Field, {\n            name: \"\".concat(name, \".give_k\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 35\n            }\n          }, function (props) {\n            return /*#__PURE__*/React.createElement(Input, {\n              placeholder: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0445 \\u043A\\u0440\\u0438\\u043F\\u0442.\",\n              type: \"number\",\n              name: props.input.name,\n              value: props.input.value,\n              onChange: props.input.onChange,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 39\n              }\n            });\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormGroup, {\n            className: \"m-2\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(InputGroup, {\n            className: \"input-group-alternative\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Field, {\n            name: \"\".concat(name, \".give_skk\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 35\n            }\n          }, function (props) {\n            return /*#__PURE__*/React.createElement(Input, {\n              placeholder: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0445 \\u0441\\u043A\\u043A\",\n              type: \"number\",\n              name: props.input.name,\n              value: props.input.value,\n              onChange: props.input.onChange,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 39\n              }\n            });\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormGroup, {\n            className: \"m-2\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(InputGroup, {\n            className: \"input-group-alternative\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Field, {\n            name: \"\".concat(name, \".device\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 35\n            }\n          }, function (props) {\n            return /*#__PURE__*/React.createElement(Input, {\n              type: \"select\",\n              name: props.input.name,\n              value: props.input.value,\n              onChange: props.input.onChange,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 39\n              }\n            }, /*#__PURE__*/React.createElement(\"option\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 41\n              }\n            }), devices.map(function (item, key) {\n              return /*#__PURE__*/React.createElement(\"option\", {\n                value: item.id,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 45\n                }\n              }, item.name);\n            }));\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            color: \"danger\",\n            onClick: function onClick() {\n              return fields.remove(index);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 31\n            }\n          }, \"\\u0423\\u0431\\u0440\\u0430\\u0442\\u044C\")));\n        }))), /*#__PURE__*/React.createElement(Button, {\n          block: true,\n          color: \"success\",\n          onClick: function onClick() {\n            return fields.push({});\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 21\n          }\n        }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"array-field-row\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          block: true,\n          color: \"secondary\",\n          onClick: form.reset,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 23\n          }\n        }, \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n          block: true,\n          color: \"primary\",\n          onClick: function onClick() {\n            return handleSubmit(values);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 23\n          }\n        }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")));\n      }))));\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }));\n}\n\n__signature__(Records, \"useMutation{[recordMut, recordMutRes]}\\nuseState{[srcs, setsrc]([])}\\nuseState{[devices, setdevices]([])}\\nuseState{[records, setrecords]([])}\\nuseState{[startDate, setStartDate](new Date(moment().format(\\\"MMM DD, YYYYY\\\")))}\\nuseQuery{utils}\\nuseEffect{}\", function () {\n  return [useMutation, useQuery];\n});\n\nRecords.propTypes = {};\nRecords.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Records, \"Records\", \"/home/ubuntu/projects/mynetwork/src/features/records/Records.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/ubuntu/projects/mynetwork/src/features/records/Records.js"],"names":["React","useEffect","useState","Field","Form","useMutation","useQuery","Button","Card","CardBody","CardFooter","CardHeader","Col","Container","RForm","FormGroup","Input","InputGroup","Row","Table","arrayMutators","FieldArray","createRecord","getUtilsByGq","moment","Records","props","onSuccess","recordMut","recordMutRes","srcs","setsrc","devices","setdevices","records","setrecords","Date","format","startDate","setStartDate","today","dayOfYear","utils","date","user","JSON","parse","localStorage","getItem","cancel","data","srcObjects","map","item","id","src_object","device","count","give_data","give_k","give_skk","command","onSubmit","temp","key","console","log","handleSubmit","submitError","values","form","fields","name","index","input","value","onChange","remove","push","reset","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Field, Form } from \"react-final-form\";\nimport { useMutation, useQuery } from \"react-query\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Container,\n  Form as RForm,\n  FormGroup,\n  Input,\n  InputGroup,\n  Row,\n  Table,\n} from \"reactstrap\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { createRecord, getUtilsByGq } from \"./query\";\nimport moment from \"moment\";\n\nexport default function Records({ ...props }) {\n  const [recordMut, recordMutRes] = useMutation(createRecord, {\n    onSuccess: () => {},\n  });\n\n  const [srcs, setsrc] = useState([]);\n  const [devices, setdevices] = useState([]);\n  const [records, setrecords] = useState([]);\n\n  const [startDate, setStartDate] = useState(\n    new Date(moment().format(\"MMM DD, YYYYY\"))\n  );\n  const today = moment().dayOfYear() == moment(startDate).dayOfYear();\n\n  // const srcsdata = useQuery(\"srcs\", getSrcByGq)\n  // const devicedata = useQuery(\"devices\", getDeviceByGq)\n  const utils = useQuery(\n    [\"utils\", { date: moment(new Date()).format(\"YYYY-MM-DD\") }],\n    getUtilsByGq\n  );\n  // console.log(\"query\", { date: moment(new Date()).format(\"YYYY-MM-DD\") });\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  useEffect(() => {\n    let cancel = false;\n\n    if (!cancel) {\n      if (utils.data && utils.data.srcObjects != null) {\n        setsrc(utils.data.srcObjects);\n      } else {\n        setsrc([]);\n      }\n\n      if (utils.data && utils.data.devices != null) {\n        setdevices(utils.data.devices);\n      } else {\n        setdevices([]);\n      }\n\n      if (utils.data && utils.data.records != null) {\n        setrecords(\n          utils.data.records.map((item) => {\n            return {\n              id: item.id,\n              src_object: item.src_object && item.src_object.id,\n              device: item.device.id,\n              count: item.count,\n              give_data: item.give_data,\n              give_k: item.give_k,\n              give_skk: item.give_skk,\n              command: (item.command && item.command.id) || user.command.id,\n              date: item.date || moment().format(\"YYYY-MM-DD\"),\n            };\n          })\n        );\n      } else {\n        setrecords([]);\n      }\n    } else {\n      cancel = true;\n    }\n  }, [utils.data, user.command.id]);\n\n  const onSubmit = (data) => {\n    let temp = { ...data };\n    temp.records.map((item, key) => {\n      item.command = user.command.id;\n      if (item.date == null) item.date = moment().format(\"YYYY-MM-DD\");\n    });\n    // temp.command = user.command.id\n\n    console.log(\"records\", temp);\n    recordMut({ data: temp, records: records });\n  };\n  return (\n    <Form\n      onSubmit={onSubmit}\n      mutators={{\n        // potentially other mutators could be merged here\n        ...arrayMutators,\n      }}\n      initialValues={{\n        records: records,\n      }}\n      render={({ handleSubmit, submitError, values, form }) => (\n        <RForm onSubmit={handleSubmit} className=\"form\">\n          {submitError && (\n            <div className=\"text-red text-center\">{submitError}</div>\n          )}\n\n          <Card>\n            <CardHeader>\n              <h3>Добавление записей</h3>\n              <TimeNav\n                today={today}\n                startDate={startDate}\n                setStartDate={setStartDate}\n              />\n            </CardHeader>\n            <CardBody>\n              <FieldArray name=\"records\">\n                {({ fields }) => (\n                  <div>\n                    <Table\n                      className=\"align-items-center table-flush\"\n                      responsive\n                    >\n                      <thead className=\"thead-light\">\n                        <tr>\n                          <th scope=\"col\">Разведываемые объекты</th>\n                          <th scope=\"col\">\n                            Количество <br /> перехваченных <br /> разведданных\n                          </th>\n                          <th scope=\"col\">\n                            Количество <br /> представленных <br /> сведений\n                          </th>\n                          <th scope=\"col\">\n                            Количество <br /> представленных <br /> крипт.\n                          </th>\n                          <th scope=\"col\">\n                            Количество <br /> представленных <br /> скк\n                          </th>\n                          <th scope=\"col\">Средства перехвата</th>\n                          <th scope=\"col\" />\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {fields.map((name, index) => (\n                          <tr className=\"row-transition\" key={name}>\n                            <td>\n                              <FormGroup className=\"mr-2 mt-2 mb-2\">\n                                <InputGroup className=\"input-group-alternative\">\n                                  <Field name={`${name}.src_object`}>\n                                    {(props) => (\n                                      <Input\n                                        type=\"select\"\n                                        name={props.input.name}\n                                        value={props.input.value}\n                                        onChange={props.input.onChange}\n                                      >\n                                        <option />\n                                        {srcs.map((item, key) => {\n                                          return (\n                                            <option value={item.id}>\n                                              {item.name}\n                                            </option>\n                                          );\n                                        })}\n                                      </Input>\n                                    )}\n                                  </Field>\n                                </InputGroup>\n                              </FormGroup>\n                            </td>\n                            <td>\n                              <FormGroup className=\"m-2\">\n                                <InputGroup className=\"input-group-alternative\">\n                                  <Field name={`${name}.count`}>\n                                    {(props) => (\n                                      <Input\n                                        placeholder=\"Количество перехвата\"\n                                        type=\"number\"\n                                        name={props.input.name}\n                                        value={props.input.value}\n                                        onChange={props.input.onChange}\n                                      />\n                                    )}\n                                  </Field>\n                                </InputGroup>\n                              </FormGroup>\n                            </td>\n                            <td>\n                              <FormGroup className=\"m-2\">\n                                <InputGroup className=\"input-group-alternative\">\n                                  <Field name={`${name}.give_data`}>\n                                    {(props) => (\n                                      <Input\n                                        placeholder=\"Количество представленных сведений\"\n                                        type=\"number\"\n                                        name={props.input.name}\n                                        value={props.input.value}\n                                        onChange={props.input.onChange}\n                                      />\n                                    )}\n                                  </Field>\n                                </InputGroup>\n                              </FormGroup>\n                            </td>\n                            <td>\n                              <FormGroup className=\"m-2\">\n                                <InputGroup className=\"input-group-alternative\">\n                                  <Field name={`${name}.give_k`}>\n                                    {(props) => (\n                                      <Input\n                                        placeholder=\"Количество представленных крипт.\"\n                                        type=\"number\"\n                                        name={props.input.name}\n                                        value={props.input.value}\n                                        onChange={props.input.onChange}\n                                      />\n                                    )}\n                                  </Field>\n                                </InputGroup>\n                              </FormGroup>\n                            </td>\n                            <td>\n                              <FormGroup className=\"m-2\">\n                                <InputGroup className=\"input-group-alternative\">\n                                  <Field name={`${name}.give_skk`}>\n                                    {(props) => (\n                                      <Input\n                                        placeholder=\"Количество представленных скк\"\n                                        type=\"number\"\n                                        name={props.input.name}\n                                        value={props.input.value}\n                                        onChange={props.input.onChange}\n                                      />\n                                    )}\n                                  </Field>\n                                </InputGroup>\n                              </FormGroup>\n                            </td>\n                            <td>\n                              <FormGroup className=\"m-2\">\n                                <InputGroup className=\"input-group-alternative\">\n                                  <Field name={`${name}.device`}>\n                                    {(props) => (\n                                      <Input\n                                        type=\"select\"\n                                        name={props.input.name}\n                                        value={props.input.value}\n                                        onChange={props.input.onChange}\n                                      >\n                                        <option />\n                                        {devices.map((item, key) => {\n                                          return (\n                                            <option value={item.id}>\n                                              {item.name}\n                                            </option>\n                                          );\n                                        })}\n                                      </Input>\n                                    )}\n                                  </Field>\n                                </InputGroup>\n                              </FormGroup>\n                            </td>\n                            <td>\n                              <Button\n                                color=\"danger\"\n                                onClick={() => fields.remove(index)}\n                              >\n                                Убрать\n                              </Button>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </Table>\n                    <Button\n                      block\n                      color=\"success\"\n                      onClick={() => fields.push({})}\n                    >\n                      Добавить\n                    </Button>\n                    <div className=\"array-field-row\">\n                      <Button block color=\"secondary\" onClick={form.reset}>\n                        Сбросить\n                      </Button>\n                      <Button\n                        block\n                        color=\"primary\"\n                        onClick={() => handleSubmit(values)}\n                      >\n                        Сохранить\n                      </Button>\n                    </div>\n                  </div>\n                )}\n              </FieldArray>\n            </CardBody>\n          </Card>\n        </RForm>\n      )}\n      {...props}\n    />\n  );\n}\n\nRecords.propTypes = {};\nRecords.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}
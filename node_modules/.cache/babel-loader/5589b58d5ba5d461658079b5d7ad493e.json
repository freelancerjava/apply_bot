{"ast":null,"code":"import _objectSpread from \"/home/ubuntu/projects/dashboard-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/ubuntu/projects/dashboard-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"/home/ubuntu/projects/dashboard-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/ubuntu/projects/dashboard-template/src/features/operations/Operations.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { Field, Form } from 'react-final-form';\nimport { useMutation, useQuery } from 'react-query';\nimport { Button, Card, CardBody, CardFooter, CardHeader, Col, Container, Form as RForm, FormGroup, Input, InputGroup, Row, Table } from 'reactstrap';\nimport arrayMutators from 'final-form-arrays';\nimport { FieldArray } from 'react-final-form-arrays';\nimport { createRecord, getUtilsByGq } from './query'; // import PropTypes from 'prop-types';\n\nexport default function Operations(_ref) {\n  var _this = this;\n\n  var props = _extends({}, _ref);\n\n  var _useMutation = useMutation(createRecord, {\n    onSuccess: function onSuccess() {}\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      recordMut = _useMutation2[0],\n      recordMutRes = _useMutation2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      srcs = _useState2[0],\n      setsrc = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      devices = _useState4[0],\n      setdevices = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      records = _useState6[0],\n      setrecords = _useState6[1]; // const srcsdata = useQuery(\"srcs\", getSrcByGq)\n  // const devicedata = useQuery(\"devices\", getDeviceByGq)\n\n\n  var utils = useQuery('utils', getUtilsByGq); // console.log(utils);\n\n  var user = JSON.parse(localStorage.getItem('user'));\n  useEffect(function () {\n    var cancel = false;\n\n    if (!cancel) {\n      if (utils.data && utils.data.srcObjects != null) {\n        setsrc(utils.data.srcObjects);\n      } else {\n        setsrc([]);\n      }\n\n      if (utils.data && utils.data.devices != null) {\n        setdevices(utils.data.devices);\n      } else {\n        setdevices([]);\n      }\n\n      if (utils.data && utils.data.records != null) {\n        setrecords(utils.data.records.map(function (item) {\n          return {\n            id: item.id,\n            src_object: item.src_object.id,\n            device: item.device.id,\n            count: item.count,\n            command: item.command || user.command.id\n          };\n        }));\n      } else {\n        setrecords([]);\n      }\n    } else {\n      cancel = true;\n    }\n  }, [utils.data, user.command.id]);\n\n  var onSubmit = function onSubmit(data) {\n    // let temp = { ...data }\n    // temp.command = user.command.id\n    recordMut({\n      data: data,\n      records: records\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    onSubmit: onSubmit,\n    mutators: _objectSpread({}, arrayMutators),\n    initialValues: {\n      records: records\n    },\n    render: function render(_ref2) {\n      var handleSubmit = _ref2.handleSubmit,\n          submitError = _ref2.submitError,\n          values = _ref2.values,\n          form = _ref2.form;\n      return /*#__PURE__*/React.createElement(RForm, {\n        onSubmit: handleSubmit,\n        className: \"form\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, submitError && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-red text-center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 27\n        }\n      }, submitError), /*#__PURE__*/React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\"), /*#__PURE__*/React.createElement(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FieldArray, {\n        name: \"records\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, function (_ref3) {\n        var fields = _ref3.fields;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Table, {\n          className: \"align-items-center table-flush\",\n          responsive: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"thead\", {\n          className: \"thead-light\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 27\n          }\n        }, \"\\u0420\\u0430\\u0437\\u0432\\u0435\\u0434\\u044B\\u0432\\u0430\\u0435\\u043C\\u044B\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043A\\u0442\\u044B\"), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 27\n          }\n        }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0445 \\u0440\\u0430\\u0437\\u0432\\u0435\\u0434\\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 27\n          }\n        }, \"\\u0421\\u0440\\u0435\\u0434\\u0441\\u0442\\u0432\\u0430 \\u043F\\u0435\\u0440\\u0435\\u0445\\u0432\\u0430\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 27\n          }\n        }))), /*#__PURE__*/React.createElement(\"tbody\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 23\n          }\n        }, fields.map(function (name, index) {\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            className: \"row-transition\",\n            key: name,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormGroup, {\n            className: \"mr-2 mt-2 mb-2\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(InputGroup, {\n            className: \"input-group-alternative\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Field, {\n            name: \"\".concat(name, \".src_object\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 35\n            }\n          }, function (props) {\n            return /*#__PURE__*/React.createElement(Input, {\n              type: \"select\",\n              name: props.input.name,\n              value: props.input.value,\n              onChange: props.input.onChange,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 39\n              }\n            }, /*#__PURE__*/React.createElement(\"option\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 41\n              }\n            }), srcs.map(function (item, key) {\n              return /*#__PURE__*/React.createElement(\"option\", {\n                value: item.id,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 50\n                }\n              }, item.name);\n            }));\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormGroup, {\n            className: \"m-2\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(InputGroup, {\n            className: \"input-group-alternative\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Field, {\n            name: \"\".concat(name, \".count\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 35\n            }\n          }, function (props) {\n            return /*#__PURE__*/React.createElement(Input, {\n              placeholder: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u0435\\u0440\\u0435\\u0445\\u0432\\u0430\\u0442\\u0430\",\n              type: \"number\",\n              name: props.input.name,\n              value: props.input.value,\n              onChange: props.input.onChange,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 39\n              }\n            });\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormGroup, {\n            className: \"m-2\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(InputGroup, {\n            className: \"input-group-alternative\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Field, {\n            name: \"\".concat(name, \".device\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 35\n            }\n          }, function (props) {\n            return /*#__PURE__*/React.createElement(Input, {\n              type: \"select\",\n              name: props.input.name,\n              value: props.input.value,\n              onChange: props.input.onChange,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 39\n              }\n            }, /*#__PURE__*/React.createElement(\"option\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 41\n              }\n            }), devices.map(function (item, key) {\n              return /*#__PURE__*/React.createElement(\"option\", {\n                value: item.id,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 50\n                }\n              }, item.name);\n            }));\n          })))), /*#__PURE__*/React.createElement(\"td\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            color: \"danger\",\n            onClick: function onClick() {\n              return fields.remove(index);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 31\n            }\n          }, \"\\u0423\\u0431\\u0440\\u0430\\u0442\\u044C\")));\n        }))), /*#__PURE__*/React.createElement(Button, {\n          block: true,\n          color: \"success\",\n          onClick: function onClick() {\n            return fields.push({});\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }\n        }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"array-field-row\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          block: true,\n          color: \"secondary\",\n          onClick: form.reset,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 23\n          }\n        }, \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n          block: true,\n          color: \"primary\",\n          onClick: function onClick() {\n            return handleSubmit(values);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 23\n          }\n        }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")));\n      }))));\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }));\n}\n\n__signature__(Operations, \"useMutation{[recordMut, recordMutRes]}\\nuseState{[srcs, setsrc]([])}\\nuseState{[devices, setdevices]([])}\\nuseState{[records, setrecords]([])}\\nuseQuery{utils}\\nuseEffect{}\", function () {\n  return [useMutation, useQuery];\n});\n\n;\nOperations.propTypes = {};\nOperations.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Operations, \"Operations\", \"/home/ubuntu/projects/dashboard-template/src/features/operations/Operations.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/ubuntu/projects/dashboard-template/src/features/operations/Operations.js"],"names":["React","useEffect","useState","Field","Form","useMutation","useQuery","Button","Card","CardBody","CardFooter","CardHeader","Col","Container","RForm","FormGroup","Input","InputGroup","Row","Table","arrayMutators","FieldArray","createRecord","getUtilsByGq","Operations","props","onSuccess","recordMut","recordMutRes","srcs","setsrc","devices","setdevices","records","setrecords","utils","user","JSON","parse","localStorage","getItem","cancel","data","srcObjects","map","item","id","src_object","device","count","command","onSubmit","handleSubmit","submitError","values","form","fields","name","index","input","value","onChange","key","remove","push","reset","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Field, Form } from 'react-final-form';\nimport { useMutation, useQuery } from 'react-query';\nimport { Button, Card, CardBody, CardFooter, CardHeader, Col, Container, Form as RForm, FormGroup, Input, InputGroup, Row, Table } from 'reactstrap';\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { createRecord, getUtilsByGq } from './query';\n// import PropTypes from 'prop-types';\n\nexport default function Operations({ ...props }) {\n\n  const [recordMut, recordMutRes] = useMutation(createRecord, {\n    onSuccess: () => {\n\n    }\n  })\n\n  const [srcs, setsrc] = useState([])\n  const [devices, setdevices] = useState([])\n  const [records, setrecords] = useState([])\n\n  // const srcsdata = useQuery(\"srcs\", getSrcByGq)\n  // const devicedata = useQuery(\"devices\", getDeviceByGq)\n  const utils = useQuery('utils', getUtilsByGq)\n\n  // console.log(utils);\n\n  const user = JSON.parse(localStorage.getItem('user'))\n\n\n\n  useEffect(() => {\n    let cancel = false\n\n    if (!cancel) {\n      if (utils.data && utils.data.srcObjects != null) {\n        setsrc(utils.data.srcObjects)\n      } else {\n        setsrc([])\n      }\n\n      if (utils.data && utils.data.devices != null) {\n        setdevices(utils.data.devices)\n      } else {\n        setdevices([])\n      }\n\n      if (utils.data && utils.data.records != null) {\n        setrecords(utils.data.records.map(item => {\n          return {\n            id: item.id,\n            src_object: item.src_object.id,\n            device: item.device.id,\n            count: item.count,\n            command: item.command || user.command.id\n          }\n        }))\n      } else {\n        setrecords([])\n      }\n    } else {\n      cancel = true\n    }\n\n  }, [utils.data, user.command.id])\n\n  const onSubmit = (data) => {\n    // let temp = { ...data }\n    // temp.command = user.command.id\n    recordMut({ data: data, records: records })\n  }\n  return (\n    <Form\n      onSubmit={onSubmit}\n      mutators={{\n        // potentially other mutators could be merged here\n        ...arrayMutators\n      }}\n\n      initialValues={{\n        records: records\n      }}\n      render={({ handleSubmit, submitError, values, form }) => (\n        <RForm onSubmit={handleSubmit} className=\"form\">\n          {submitError && <div className=\"text-red text-center\">{submitError}</div>}\n\n          <Card>\n            <CardHeader>Добавление записей</CardHeader>\n            <CardBody>\n\n              <FieldArray name=\"records\">\n                {({ fields }) => (\n                  <div>\n                    <Table className=\"align-items-center table-flush\" responsive>\n                      <thead className=\"thead-light\">\n                        <tr>\n                          <th scope=\"col\">Разведываемые объекты</th>\n                          <th scope=\"col\">Количество представленных разведданных</th>\n                          <th scope=\"col\">Средства перехвата</th>\n                          <th scope=\"col\" />\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {fields.map((name, index) => (\n                          <tr className=\"row-transition\" key={name}>\n                            <td>\n                              <FormGroup className=\"mr-2 mt-2 mb-2\">\n                                <InputGroup className=\"input-group-alternative\">\n                                  <Field name={`${name}.src_object`}>\n                                    {props => (\n                                      <Input type=\"select\"\n                                        name={props.input.name}\n                                        value={props.input.value}\n                                        onChange={props.input.onChange}>\n                                        <option />\n                                        {srcs.map((item, key) => {\n                                          return <option value={item.id}>{item.name}</option>\n                                        })}\n                                      </Input>\n                                    )}\n                                  </Field>\n                                </InputGroup>\n                              </FormGroup>\n                            </td>\n                            <td>\n                              <FormGroup className=\"m-2\">\n                                <InputGroup className=\"input-group-alternative\">\n                                  <Field name={`${name}.count`}>\n                                    {props => (\n                                      <Input placeholder=\"Количество перехвата\" type=\"number\"\n                                        name={props.input.name}\n                                        value={props.input.value}\n                                        onChange={props.input.onChange}\n                                      />\n                                    )}\n                                  </Field>\n                                </InputGroup>\n                              </FormGroup>\n                            </td>\n                            <td>\n                              <FormGroup className=\"m-2\">\n                                <InputGroup className=\"input-group-alternative\">\n                                  <Field name={`${name}.device`}>\n                                    {props => (\n                                      <Input type=\"select\"\n                                        name={props.input.name}\n                                        value={props.input.value}\n                                        onChange={props.input.onChange}>\n                                        <option />\n                                        {devices.map((item, key) => {\n                                          return <option value={item.id}>{item.name}</option>\n                                        })}\n                                      </Input>\n                                    )}\n                                  </Field>\n                                </InputGroup>\n                              </FormGroup>\n                            </td>\n                            <td>\n                              <Button color=\"danger\" onClick={() => fields.remove(index)}>Убрать</Button>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </Table>\n                    <Button\n                      block\n                      color=\"success\"\n                      onClick={() => fields.push({})}\n                    >Добавить</Button>\n                    <div className=\"array-field-row\">\n                      <Button\n                        block\n                        color=\"secondary\"\n                        onClick={form.reset}\n                      >Сбросить</Button>\n                      <Button\n                        block\n                        color=\"primary\"\n                        onClick={() => handleSubmit(values)}\n                      >Сохранить</Button>\n                    </div>\n\n\n                  </div>\n                )}\n              </FieldArray>\n            </CardBody>\n          </Card>\n\n\n\n        </RForm>)}\n      {...props}\n    />\n  );\n};\n\nOperations.propTypes = {};\nOperations.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}